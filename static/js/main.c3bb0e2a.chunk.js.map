{"version":3,"sources":["pages/Home.js","pages/BarcodeGenerator.js","pages/Scanner.js","pages/BarcodeScanner.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Typography","style","margin","variant","Grid","container","spacing","item","xs","to","Button","size","color","xmlns","width","height","padding","fill","class","viewBox","d","BarcodeGenerator","useState","barcode","setBarcode","inputRef","useBarcode","value","options","background","Fab","marginRight","ArrowBack","marginTop","marginBottom","TextField","onChange","event","target","label","id","ref","TextareaAutosize","fontSize","rowsMax","defaultValue","onClick","pngUrl","document","getElementById","toDataURL","replace","downloadLink","createElement","href","download","body","appendChild","click","removeChild","marginLeft","GetApp","Scanner","_onDetected","result","props","onDetected","Quagga","init","inputStream","type","constraints","facingMode","locator","halfSample","patchSize","debug","showCanvas","showPatches","showFoundPatches","showSkeleton","showLabels","showPatchLabels","showRemainingPatchLabels","boxFromPatches","showTransformed","showTransformedBox","showBB","numOfWorkers","decoder","readers","drawBoundingBox","showFrequency","drawScanline","showPattern","locate","err","console","log","start","this","offDetected","className","Component","BarcodeScanner","state","results","_scan","setState","scanning","concat","Paper","codeResult","code","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c3bb0e2a.chunk.js","sourcesContent":["import {Grid, Button, Typography} from '@material-ui/core';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Typography style={{margin:30}} variant=\"h2\">\r\n            React Barcode\r\n            </Typography>\r\n\r\n            <Grid container spacing={6}>\r\n                <Grid item xs={6}>\r\n                    <Link to=\"/barcode_generator\">\r\n                    <Button variant=\"contained\" size=\"large\" color=\"secondary\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"300\" height=\"300\" style={{padding:30}} fill=\"currentColor\" class=\"bi bi-upc\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M3 4.5a.5.5 0 0 1 1 0v7a.5.5 0 0 1-1 0v-7zm2 0a.5.5 0 0 1 1 0v7a.5.5 0 0 1-1 0v-7zm2 0a.5.5 0 0 1 1 0v7a.5.5 0 0 1-1 0v-7zm2 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-7zm3 0a.5.5 0 0 1 1 0v7a.5.5 0 0 1-1 0v-7z\"/>\r\n                        </svg>\r\n                    </Button>\r\n                    </Link>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Link to=\"/barcode_scanner\">\r\n                    <Button variant=\"contained\" size=\"large\" color=\"secondary\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"300\" height=\"300\" style={{padding:30}} fill=\"currentColor\" class=\"bi bi-upc-scan\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M1.5 1a.5.5 0 0 0-.5.5v3a.5.5 0 0 1-1 0v-3A1.5 1.5 0 0 1 1.5 0h3a.5.5 0 0 1 0 1h-3zM11 .5a.5.5 0 0 1 .5-.5h3A1.5 1.5 0 0 1 16 1.5v3a.5.5 0 0 1-1 0v-3a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 1-.5-.5zM.5 11a.5.5 0 0 1 .5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 1 0 1h-3A1.5 1.5 0 0 1 0 14.5v-3a.5.5 0 0 1 .5-.5zm15 0a.5.5 0 0 1 .5.5v3a1.5 1.5 0 0 1-1.5 1.5h-3a.5.5 0 0 1 0-1h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 1 .5-.5zM3 4.5a.5.5 0 0 1 1 0v7a.5.5 0 0 1-1 0v-7zm2 0a.5.5 0 0 1 1 0v7a.5.5 0 0 1-1 0v-7zm2 0a.5.5 0 0 1 1 0v7a.5.5 0 0 1-1 0v-7zm2 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-7zm3 0a.5.5 0 0 1 1 0v7a.5.5 0 0 1-1 0v-7z\"/>\r\n                        </svg>\r\n                    </Button>\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n        \r\n        </div>\r\n    );\r\n  }\r\n  \r\n  export default Home;\r\n  ","import React, {useState} from 'react'\r\nimport {Fab, TextField, TextareaAutosize, Grid} from '@material-ui/core'\r\nimport {ArrowBack, GetApp} from '@material-ui/icons'\r\nimport { Link } from \"react-router-dom\";\r\n// var Barcode = require('react-barcode');\r\nimport { useBarcode } from '@createnextapp/react-barcode'\r\n\r\nfunction BarcodeGenerator() {\r\n    const [barcode, setBarcode] = useState('lintangwisesa');\r\n    const handleChange = (event) => {\r\n        setBarcode(event.target.value ? event.target.value : '');\r\n    };\r\n    const { inputRef } = useBarcode({\r\n        value: barcode,\r\n        options: {\r\n          background: '#ffffff',\r\n        }\r\n    });\r\n    const downloadBarcode = () => {\r\n        const canvas = document.getElementById(\"mybarcode\");\r\n        const pngUrl = canvas\r\n          .toDataURL(\"image/png\")\r\n          .replace(\"image/png\", \"image/octet-stream\");\r\n        let downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = pngUrl;\r\n        downloadLink.download = \"mybarcode.png\";\r\n        document.body.appendChild(downloadLink);\r\n        downloadLink.click();\r\n        document.body.removeChild(downloadLink);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n            <Link to=\"/\">\r\n            <Fab style={{marginRight:10}} color=\"secondary\">\r\n                <ArrowBack/>\r\n            </Fab>\r\n            </Link>\r\n            <span>Barcode Generator</span>\r\n            \r\n            <div style={{marginTop:30, marginBottom:30}}>\r\n                <TextField onChange={handleChange} style={{width:320}}\r\n                value={barcode} label=\"Barcode content\" size=\"large\" variant=\"outlined\" color=\"secondary\" \r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                {\r\n                    barcode !== ''\r\n                    ?\r\n                    // <Barcode \r\n                    //     id=\"mybarcode\" value={barcode} background='#ffffff'\r\n                    //     lineColor='red'\r\n                    //     width=\"2\"\r\n                    //     height=\"100\"\r\n                    //     format=\"CODE128\"\r\n                    //     displayValue='true'\r\n                    //     font='monospace'\r\n                    //     textAlign='center'\r\n                    //     textPosition='bottom'\r\n                    //     textMargin='5'\r\n                    //     fontSize='12'\r\n                    //     margin='10'\r\n                    //     marginTop='10'\r\n                    //     marginBottom='10'\r\n                    //     marginLeft='10'\r\n                    //     marginRight='10'\r\n                    // />\r\n                    <canvas id=\"mybarcode\" ref={inputRef} />\r\n                    :\r\n                    <p>No barcode preview</p>\r\n                }\r\n            </div>\r\n            <div>\r\n                {\r\n                    barcode ? \r\n                    <Grid container style={{marginTop:30}}>\r\n                        <Grid item xs={10}>\r\n                        <TextareaAutosize\r\n                            style={{fontSize:18, width:250, height:100}}\r\n                            rowsMax={4}\r\n                            defaultValue={barcode}\r\n                            value={barcode}\r\n                        />\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                        <Fab onClick={downloadBarcode} style={{marginLeft:10}} color=\"secondary\">\r\n                            <GetApp/>\r\n                        </Fab>\r\n                        </Grid>\r\n                    </Grid> :\r\n                    ''\r\n                }\r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default BarcodeGenerator;\r\n  ","import React, { Component } from 'react'\r\nimport Quagga from 'quagga'\r\n\r\nclass Scanner extends Component {\r\n  componentDidMount() {\r\n    Quagga.init(\r\n      {\r\n        inputStream: {\r\n          type: 'LiveStream',\r\n          constraints: {\r\n            width: 640,\r\n            height: 320,\r\n            facingMode: 'environment',\r\n          },\r\n        //   area: { // defines rectangle of the detection/localization area\r\n        //     top: \"10%\",    // top offset\r\n        //     right: \"10%\",  // right offset\r\n        //     left: \"10%\",   // left offset\r\n        //     bottom: \"10%\"  // bottom offset\r\n        //   },\r\n        },\r\n        locator: {\r\n            halfSample: true,\r\n            patchSize: \"large\", // x-small, small, medium, large, x-large\r\n            debug: {\r\n                showCanvas: true,\r\n                showPatches: false,\r\n                showFoundPatches: false,\r\n                showSkeleton: false,\r\n                showLabels: false,\r\n                showPatchLabels: false,\r\n                showRemainingPatchLabels: false,\r\n                boxFromPatches: {\r\n                    showTransformed: true,\r\n                    showTransformedBox: true,\r\n                    showBB: true\r\n              }\r\n            }\r\n        },\r\n        numOfWorkers: 4,\r\n        decoder: {\r\n            readers: ['code_128_reader'],\r\n            debug: {\r\n                drawBoundingBox: true,\r\n                showFrequency: true,\r\n                drawScanline: true,\r\n                showPattern: true\r\n            },\r\n        },\r\n        locate: true,\r\n      },\r\n      function(err) {\r\n        if (err) {\r\n          return console.log(err)\r\n        }\r\n        Quagga.start()\r\n      },\r\n    )\r\n    Quagga.onDetected(this._onDetected)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Quagga.offDetected(this._onDetected)\r\n  }\r\n\r\n  _onDetected = result => {\r\n    this.props.onDetected(result)\r\n  }\r\n\r\n  render() {\r\n    return <div id=\"interactive\" className=\"viewport\"/>\r\n    }\r\n}\r\n\r\nexport default Scanner\r\n","import React, { Component } from 'react'\r\nimport Scanner from './Scanner'\r\nimport {Fab, TextareaAutosize, Paper} from '@material-ui/core'\r\nimport {ArrowBack} from '@material-ui/icons'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass BarcodeScanner extends Component {\r\n  state = {\r\n    results: [],\r\n  }\r\n\r\n  _scan = () => {\r\n    this.setState({ scanning: !this.state.scanning })\r\n  }\r\n\r\n  _onDetected = result => {\r\n    this.setState({ results: [] })\r\n    this.setState({ results: this.state.results.concat([result]) })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link to=\"/\">\r\n            <Fab style={{marginRight:10}} color=\"secondary\">\r\n                <ArrowBack/>\r\n            </Fab>\r\n        </Link>\r\n        <span>Barcode Scanner</span>\r\n        \r\n        <Paper variant=\"outlined\" style={{marginTop:30, width:640, height:320}}>\r\n          <Scanner onDetected={this._onDetected} />\r\n        </Paper>\r\n\r\n        <TextareaAutosize\r\n            style={{fontSize:32, width:320, height:100, marginTop:30}}\r\n            rowsMax={4}\r\n            defaultValue={'No data scanned'}\r\n            value={this.state.results[0] ? this.state.results[0].codeResult.code : 'No data scanned'}\r\n        />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BarcodeScanner\r\n","import './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  // Link\r\n} from \"react-router-dom\";\r\n\r\nimport Home from './pages/Home'\r\nimport Bargen from './pages/BarcodeGenerator'\r\nimport Barscan from './pages/BarcodeScanner'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"App-header\">\r\n      \r\n        <Router>\r\n          <div>\r\n\r\n            <Switch>\r\n\r\n              <Route path=\"/barcode_generator\">\r\n                <Bargen/>\r\n              </Route>\r\n              <Route path=\"/barcode_scanner\">\r\n                <Barscan/>\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Home/>\r\n              </Route>\r\n            </Switch>\r\n\r\n          </div>\r\n        </Router>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}